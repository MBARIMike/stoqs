version: '2.2'

# docker-compose-stoqs_mbari_org.yml file to be used for stoqs.mbari.org public STOQS server
# Notable differences from docker-compose.yml used for internal STOQS servers:
# 1. The stoqs campaign databases are remotely accessed from an internal postgres
#    server specified in the .env file via the STOQS_PGHOST variable
# 2. The CAMPAIGNS_MODULE is set to a file for campaigns that are publicly available
# 3. Start containers with:
#    cd /opt/stoqsgit/docker && docker-compose -f docker-compose-stoqs_mbari_org.yml up -d
#    docker-compose -f docker-compose-stoqs_mbari_org.yml logs -f
# 4. The postgres container here is for storing shortened 'Share this view' URLs
#    by the ur_l service

volumes:
    static-files:
    media-files:

services:

  mapserver:
    image: geodata/mapserver:7.0.1
    volumes:
      - ${STOQS_VOLS_DIR}/maps:${URL_MAPFILE_DIR}:ro
    container_name: stoqs-mapserver
    # Expose port 80 if PRODUCTION=false - Note: PRODUCTION=false doesn't work (March 2019)
    ##ports:
    ##  - "80:80"
    env_file:
      - ./.env

  stoqs:
    image: mbari/stoqs
    build:
        context: .
        dockerfile: Dockerfile-stoqs
    volumes:
      - ${STOQS_VOLS_DIR}/maps:${MAPFILE_DIR}
      - ${STOQS_VOLS_DIR}/stoqs_root:/root
      - ${STOQS_VOLS_DIR}/nginx:/usr/share/nginx
      - ${STOQS_VOLS_DIR}/pg_dumps:/srv/media-files/pg_dumps
      - ${STOQS_HOME}:/srv
      - static-files:/srv/static-files
      - media-files:/srv/media-files
    environment:
      - DATABASE_URL=postgis://${STOQSADM_USER}:${STOQSADM_PASSWORD}@${STOQS_PGHOST}:${STOQS_PGHOST_PORT}/stoqs
      - DATABASE_SUPERUSER_URL=postgis://postgres:${POSTGRES_PASSWORD}@${STOQS_PGHOST}:${STOQS_PGHOST_PORT}/stoqs
      - PGHOST=${STOQS_PGHOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - MAPSERVER_HOST=${MAPSERV_SERVER_NAME}
      - URL_MAPFILE_DIR=/maps
      - STATIC_URL=/static/
      - STATIC_ROOT=/srv/static-files
      - MEDIA_URL=/media/
      - MEDIA_ROOT=/srv/media-files
      - NGINX_SERVER_NAME=${NGINX_SERVER_NAME}
      - UWSGI_READ_TIMEOUT=${UWSGI_READ_TIMEOUT}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - USER=${USER}
    container_name: stoqs
    depends_on:
      - mapserver
    ports:
      - "8888:8888"
    # Expose port 8000 if PRODUCTION=false - Note: PRODUCTION=false doesn't work (March 2019)
    ##  - "8000:8000"
    env_file:
      - ./.env

  # Disable nginx service if PRODUCTION=false - Note: PRODUCTION=false doesn't work (March 2019)
  nginx:
    image: mbari/stoqs-nginx
    build:
        context: .
        dockerfile: Dockerfile-nginx
    volumes:
      - ${STOQS_VOLS_DIR}/html:/srv/html
      - ${STOQS_VOLS_DIR}/pg_dumps:/srv/media-files/pg_dumps
      - static-files:/srv/static-files
      - media-files:/srv/media-files
    environment:
      - NGINX_TMPL=${NGINX_TMPL}
    container_name: stoqs-nginx
    ports:
      - "80:80"
      - "8000:8000"
      - "443:443"
    depends_on:
      - stoqs
    env_file:
      - ./.env
